/* --- CSS Variables & Theme --- */
/* Defines color schemes for light and dark modes using CSS custom properties. */
/* The theme is controlled by the `data-theme` attribute on the `html` element. */

/* Default theme (dark), also used if `data-theme` is not set. */
:root {
  --bg: #0b0c10;
  --card: #28223c;
  --text: #e6e8eb;
  --muted: #9aa3ad;
  --accent: #5c80bc;
  --accent-2: #cc5871;
  --border: #1f2430;
  --shadow: 0 8px 24px rgba(0, 0, 0, 0.3);
}

/* Dark mode theme variables */
[data-theme="dark"] {
  --bg: #0b0c10;
  --card: #262935;
  --text: #e6e8eb;
  --muted: #9aa3ad;
  --accent: #5c80bc;
  --accent-2: #cc5871;
  --border: #1f2430;
  --shadow: 0 8px 24px rgba(0, 0, 0, 0.3);
}

/* Light mode theme variables */
[data-theme="light"] {
  --bg: #f7f8fa;
  --card: #ffffff;
  --text: #28223c;
  --muted: #5b6470;
  --accent: #5c80bc;
  --accent-2: #cc5871;
  --border: #e6e8ef;
  --shadow: 0 6px 20px rgba(0, 0, 0, 0.08);
}

/* --- Base Styles --- */
/* Basic resets and global styles. */
* {
  box-sizing: border-box;
}
html, body { height: 100%; overflow-x: hidden; }
body {
  margin: 0;
  font-family: "Poppins", ui-sans-serif, system-ui, -apple-system, "Segoe UI",
    Roboto, "Helvetica Neue", Arial, "Apple Color Emoji", "Segoe UI Emoji";
  color: var(--text);
  /* Fancy gradient background */
  background: radial-gradient(
      1200px 800px at 20% -10%,
      rgba(124, 92, 255, 0.15),
      transparent 40%
    ),
    radial-gradient(
      1000px 600px at 110% 10%,
      rgba(39, 198, 162, 0.12),
      transparent 40%
    ),
    var(--bg);
  line-height: 1.55;
}

h1, h2, h3 {
  margin: 0;
  line-height: 1.2;
}
button {
  font: inherit; /* Ensures buttons use the body font */
}

.container {
  width: min(1200px, 92vw);
  margin: 0 auto;
}

/* --- Header --- */
/* Styles for the sticky header containing branding and controls. */
.app-header {
  position: sticky;
  top: 0;
  z-index: 50;
  backdrop-filter: saturate(180%) blur(10px); /* Frosted glass effect */
  background: color-mix(in oklab, var(--bg), transparent 25%);
  border-bottom: 1px solid var(--border);
  padding: 14px min(24px, 4vw);
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.brand {
  display: flex;
  align-items: center;
  gap: 12px;
}
.logo {
  font-size: 22px;
}
.app-header h1 {
  font-size: 20px;
  letter-spacing: 0.3px;
}

/* Controls container (search, select, theme toggle) */
.controls {
  display: flex;
  align-items: center;
  gap: 10px;
}
.search {
  display: flex;
  align-items: center;
  gap: 8px;
  background: var(--card);
  border: 1px solid var(--border);
  padding: 10px 12px;
  border-radius: 14px;
  box-shadow: var(--shadow);
}
.search input {
  flex: 1;
  min-width: 0; /* Allow shrinking in flex layouts */
  border: none;
  outline: none;
  background: transparent;
  color: var(--text);
}
/* Category select dropdown */
.select select {
  appearance: none; /* Remove default system appearance */
  -webkit-appearance: none;
  -moz-appearance: none;
  background: var(--card);
  color: var(--text);
  border: 1px solid var(--border);
  border-radius: 14px;
  padding: 10px 12px;
  min-height: 40px;
  box-shadow: var(--shadow);
}
.select select:focus-visible {
  outline: 2px solid var(--accent);
  outline-offset: 2px;
}
/* General purpose icon button (used for theme toggle, etc.) */
.icon-btn {
  display: grid;
  place-items: center;
  width: 40px;
  height: 40px;
  padding: 0;
  border-radius: 12px;
  border: 1px solid var(--border);
  background: var(--card);
  color: var(--text);
  box-shadow: var(--shadow);
  cursor: pointer;
}
.icon-btn:hover {
  transform: translateY(-1px);
}

/* Theme icons: hidden by default, shown based on `data-theme` */
.theme-icon {
  display: none;
}
[data-theme="light"] .theme-icon.sun {
  display: inline-block;
}
[data-theme="dark"] .theme-icon.moon {
  display: inline-block;
}

/* --- Filters --- */
/* Styles for the A-Z filter button bar. */
.filters {
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
  padding: 14px min(24px, 4vw);
}
.filter-btn {
  padding: 8px 10px;
  border-radius: 12px;
  background: color-mix(in oklab, var(--card), transparent 10%);
  border: 1px solid var(--border);
  color: var(--muted);
  cursor: pointer;
}
.filter-btn.active {
  color: white;
  background: #28223c;
  border-color: transparent;
}

/* --- Content --- */
/* Main content area for stats and cards. */
.content {
  padding: 0 min(24px, 4vw) 60px;
}

.stats {
  margin: 8px 0 16px;
  color: var(--muted);
  font-size: 14px;
}

/* Grid layout for glossary cards */
.cards {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
  gap: 14px;
}

/* Individual glossary entry card */
.card {
  background: var(--card);
  border: 1px solid var(--border);
  border-radius: 16px;
  box-shadow: var(--shadow);
  padding: 16px;
  display: flex;
  flex-direction: column;
  gap: 8px;
}
.card h3 {
  font-size: 16px;
}
.card .meta {
  display: flex;
  gap: 8px;
  align-items: center;
  color: var(--muted);
  font-size: 12px;
}
.badge {
  font-size: 12px;
  padding: 2px 8px;
  border-radius: 999px;
  border: 1px solid var(--border);
  background: color-mix(in oklab, var(--bg), transparent 30%);
}

.card p {
  margin: 0;
  color: var(--text);
}

/* "Expand" button on cards */
.more-btn {
  display: inline-flex;
  align-items: center;
  gap: 6px;
  align-self: flex-start; /* Align to the start of the flex container */
  margin-top: 6px;
  min-height: 44px; /* Better touch target size */
  padding: 10px 12px;
  border-radius: 10px;
  border: 1px solid var(--border);
  background: color-mix(in oklab, var(--card), transparent 6%);
  color: var(--text);
  cursor: pointer;
}
.more-btn:hover { transform: translateY(-1px); }
.more-btn:focus-visible {
  outline: 2px solid var(--accent);
  outline-offset: 2px;
}

/* Status message for "No results found" */
.status {
  margin-top: 18px;
  padding: 12px;
  border-radius: 12px;
  border: 1px dashed var(--border);
  color: var(--muted);
}

/* --- Footer --- */
.app-footer {
  border-top: 1px solid var(--border);
  padding: 16px min(24px, 4vw);
  color: var(--muted);
}

/* --- Utilities --- */
/* Helper class to visually hide elements but keep them accessible to screen readers. */
.hidden {
  display: none !important;
}
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

/* Prevents body scrolling when the modal is open. */
.no-scroll { overflow: hidden; }

/* --- Modal --- */
/* Styles for the modal dialog used to show full definitions. */
.modal[hidden] { display: none !important; }
.modal {
  position: fixed;
  inset: 0;
  z-index: 1000;
}
.modal-overlay {
  position: absolute;
  inset: 0;
  background: rgba(0,0,0,.5);
}
.modal-dialog {
  position: relative;
  max-width: min(720px, 92vw);
  max-height: 80vh;
  margin: 6vh auto;
  background: var(--card);
  border: 1px solid var(--border);
  border-radius: 16px;
  box-shadow: var(--shadow);
  padding: 16px;
  outline: none;
  overflow: auto; /* Allow scrolling within the modal if content overflows */
}
.modal-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 8px;
  padding-bottom: 8px;
  border-bottom: 1px solid var(--border);
}
.modal-header h2 { font-size: 18px; margin: 0; }
.modal-body { padding-top: 12px; }

/* --- Responsive Styles --- */
/* Media query for smaller screens (e.g., mobile devices). */
@media (max-width: 768px) {
  /* Stack header items vertically */
  .app-header {
    display: grid !important;
    grid-template-columns: 1fr;
    gap: 12px;
    padding: 12px min(16px, 4vw);
  }
  .app-header .brand {
    justify-content: space-between;
    width: 100%;
  }
  /* Arrange controls in a grid */
  .app-header .controls {
    width: 100%;
    display: grid;
    grid-template-columns: minmax(0, 1fr) auto auto; /* Search fills space, others are auto-sized */
    gap: 8px;
  }
  .app-header .search {
    min-width: 0 !important; /* Allow search input to shrink */
    width: 100% !important;
  }
  .app-header .icon-btn {
    justify-self: end;
  }
  /* Switch to a single-column layout for cards */
  .cards {
    grid-template-columns: minmax(0, 1fr);
  }
}
